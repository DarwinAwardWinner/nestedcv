% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nestedcv.R
\name{nestedcv.train}
\alias{nestedcv.train}
\title{Nested CV for caret}
\usage{
nestedcv.train(
  y,
  x,
  filterFUN = NULL,
  filter_options = NULL,
  n_outer_folds = 10,
  cores = 1,
  metric = ifelse(is.factor(y), "logLoss", "RMSE"),
  trControl = NULL,
  ...
)
}
\arguments{
\item{y}{Response vector}

\item{x}{Matrix of predictors}

\item{filterFUN}{Filter function, e.g. \link{uni_filter} or \link{relieff_filter}.
Any function can be provided and is passed \code{y} and \code{x}. Must return a
character vector with names of filtered predictors.}

\item{filter_options}{List of additional arguments passed to the filter
function specified by \code{filterFUN}.}

\item{n_outer_folds}{Number of outer CV folds}

\item{cores}{Number of cores for parallel processing. Note this currently
uses \code{parallel::mclapply}.}

\item{metric}{A string that specifies what summary metric will be used to
select the optimal model. By default, "logLoss" is used for classification
and "RMSE" is used for regression. Note this differs from the default setting
in caret which uses "Accuracy" for classification. See details.}

\item{trControl}{A list of values generated by the \code{caret} function
\link{trainControl}. This defines how inner CV training through \code{caret} is
performed. See http://topepo.github.io/caret/using-your-own-model-in-train.html.}

\item{...}{Arguments passed to \link[caret:train]{caret::train}}
}
\description{
Wrapper function for applying nested CV and predictor filtering followed by
training using \code{caret}.
}
